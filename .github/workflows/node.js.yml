# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ dev, master ]

jobs:
  build:
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
    environment: testing
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm test
      env:
        AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
        AUTH_URI: ${{ secrets.AUTH_URI }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
        DB_ADDRESS_TEST: localhost:27017/hackerapi
#         DB_ADDRESS_TEST: ${{ secrets.DB_ADDRESS_TEST }}
#         DB_PASS_TEST: ${{ secrets.DB_PASS_TEST }}
#         DB_USER_TEST: ${{ secrets.DB_USER_TEST }}
        JWT_CONFIRM_ACC_SECRET: ${{ secrets.JWT_CONFIRM_ACC_SECRET }}
        JWT_INVITE_SECRET: ${{ secrets.JWT_CONFIRM_ACC_SECRET }}
        JWT_RESET_PWD_SECRET: ${{ secrets.JWT_RESET_PWD_SECRET }}
        NO_REPLY_EMAIL: ${{ secrets.NO_REPLY_EMAIL }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        TOKEN_URI: ${{ secrets.TOKEN_URI }}
        TYPE: ${{ secrets.TYPE }}
        PORT: 3000
        ADDRESS: localhost
        COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
        # we don't currently have hosted elastic apm
#        ELASTIC_APM_SERVICE_NAME: ${{ secrets.ELASTIC_APM_SERVICE_NAME }}
#        ELASTIC_APM_SECRET_TOKEN: ${{ secrets.ELASTIC_APM_SECRET_TOKEN }}
#        ELASTIC_APM_SERVER_URL: ${{ secrets.ELASTIC_APM_SERVER_URL }}
        FRONTEND_ADDRESS_DEV: localhost:1337
        FRONTEND_ADDRESS_DEPLOY: app.mchacks.ca
